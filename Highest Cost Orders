
Find the customer with the highest daily total order cost between 2019-02-01 to 2019-05-01. 
If customer had more than one order on a certain day, sum the order costs on daily basis. 
Output their first name, total cost of their items, and the date.

For simplicity, you can assume that every first name in the dataset is unique.

---------------------------------------------------------------------------------------------

WITH max_sum_order_cost1 AS
(WITH max_sum_order_cost AS
    (SELECT sum(total_order_cost) AS sum_order_cost
        FROM orders
        WHERE order_date BETWEEN '2019-02-01' AND '2019-05-01'
        GROUP BY 
            cust_id,
            order_date)
SELECT max(sum_order_cost) AS sum_order_cost
FROM max_sum_order_cost)

SELECT
    a.first_name,
    sum(b.total_order_cost) AS sum_order_cost_per_date,
    b.order_date
FROM customers a
LEFT JOIN orders b
ON a.id = b.cust_id
WHERE order_date BETWEEN '2019-02-01' AND '2019-05-01'
GROUP BY 
    a.first_name,
    b.order_date
HAVING sum(total_order_cost) = 
        (SELECT *
         FROM max_sum_order_cost1)
